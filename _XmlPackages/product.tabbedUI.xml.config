<?xml version="1.0" encoding="utf-8" ?>
<package version="2.1" displayname="Tabbed UI" debug="false" includeentityhelper="true">

	<!-- ###################################################################################################### -->
	<!-- Copyright AspDotNetStorefront.com, 1995-2009.  All Rights Reserved.					                -->
	<!-- http://www.aspdotnetstorefront.com														                -->
	<!-- For details on this license please visit  the product homepage at the URL above.		                -->
	<!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
	<!--                                                                                                        -->
	<!-- ###################################################################################################### -->


	<query name="Products" rowElementName="Product">
		<sql>
			<![CDATA[
                exec dbo.aspdnsf_ProductInfo @ProductID, @CustomerLevelID, 0, 0, @affiliateID
            ]]>
		</sql>
		<queryparam paramname="@ProductID"       paramtype="request" requestparamname="ProductID"       sqlDataType="int" defvalue="0"  validationpattern="^\d{1,10}$" />
		<queryparam paramname="@CustomerLevelID" paramtype="runtime" requestparamname="CustomerLevelID" sqlDataType="int" defvalue="0"  validationpattern="" />
		<queryparam paramname="@affiliateID"     paramtype="system"  requestparamname="AffiliateID"     sqlDataType="int" defvalue="0"  validationpattern="" />
	</query>

	<PackageTransform>

		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes" />

			<xsl:param name="LocaleSetting" select="/root/Runtime/LocaleSetting" />
			<xsl:param name="WebConfigLocaleSetting" select="/root/Runtime/WebConfigLocaleSetting" />
			<xsl:param name="XmlPackageName" select="/root/System/XmlPackageName" />


			<xsl:param name="SecID">
				<xsl:choose>
					<xsl:when test="count(/root/QueryString/sectionid) &gt; 0">
						<xsl:value-of select="/root/QueryString/sectionid" />
					</xsl:when>
					<xsl:otherwise>0</xsl:otherwise>
				</xsl:choose>
			</xsl:param>


			<xsl:param name="CatID">
				<xsl:choose>
					<xsl:when test="count(/root/QueryString/categoryid) &gt; 0">
						<xsl:value-of select="/root/QueryString/categoryid" />
					</xsl:when>
					<xsl:otherwise>0</xsl:otherwise>
				</xsl:choose>
			</xsl:param>

			<xsl:param name="ManID">
				<xsl:choose>
					<xsl:when test="count(/root/QueryString/manufacturerid) &gt; 0">
						<xsl:value-of select="/root/QueryString/manufacturerid" />
					</xsl:when>
					<xsl:otherwise>0</xsl:otherwise>
				</xsl:choose>
			</xsl:param>

			<xsl:param name="isMultiVariant" select="count(root/Products/Product) &gt; 1" />

			<xsl:template match="/">
				<xsl:comment>Copyright 1995-2008 AspDotNetStorefront.com</xsl:comment>
				<xsl:for-each select="/root/Products/Product[1]">
					<xsl:call-template name="tabbedtemplate"/>
				</xsl:for-each>
			</xsl:template>


			<xsl:template name="tabbedtemplate">
				<xsl:param name="pSEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:param>
				<xsl:param name="AltText">
					<xsl:choose>
						<xsl:when test="$pSEAltText=''">
							<xsl:value-of select="aspdnsf:GetMLValue(Name)" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$pSEAltText" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:param>

				<xsl:choose>
					<xsl:when test="IsAKit=1">
						<div>
							<b>
								<font color="red">
									Display of Kit Products is not supported by this XmlPackage.<br /><br />XmlPackage=<xsl:value-of select="$XmlPackageName" />
								</font>
							</b>
						</div>
					</xsl:when>
					<xsl:when test="IsAPack=1">
						<div>
							<b>
								<font color="red">
									Display of Pack Products is not supported by this XmlPackage.<br /><br />XmlPackage=<xsl:value-of select="$XmlPackageName" />
								</font>
							</b>
						</div>
					</xsl:when>
					<xsl:otherwise>

						<div align="right" style="width: 100%; float: right; margin-bottom: -20px; position: relative;">
							<nobr>
								<xsl:value-of select="aspdnsf:ProductNavLinks(ProductID, /root/Runtime/EntityID, /root/Runtime/EntityName, /root/EntityHelpers/*[name()=/root/Runtime/EntityName]/descendant::Entity[EntityID=/root/Runtime/EntityID]/SEName, 0, 1, 1)" disable-output-escaping="yes" />
							</nobr>
						</div>
						<table border="0" width="100%" cellpadding="0" cellspacing="0">
							<tr>
								<td>
									<table width="100%" cellpadding="2" cellspacing="0" border="0" style="border-style: solid; border-width: 0px; border-color: #{aspdnsf:AppConfig('HeaderBGColor')};" >
										<tr>
											<td align="left" valign="top">
												<script type="text/javascript" src="jscripts/tabbedui.js"></script>
												<div>
													<div id="pagetabs">
														<a rel="overview">
															<xsl:value-of select="aspdnsf:StringResource('product.tabUI.tab1')" disable-output-escaping="yes" />
														</a>
														<a rel="images">
															<xsl:value-of select="aspdnsf:StringResource('product.tabUI.tab2')" disable-output-escaping="yes" />
														</a>
														<xsl:if test="aspdnsf:IsMLExpress() = 'false' and aspdnsf:ProductRatings(ProductID, 0, 0, 0, 1, 0) !=''">
															<a rel="reviews">
																<xsl:value-of select="aspdnsf:StringResource('product.tabUI.tab3')" disable-output-escaping="yes" />
															</a>
														</xsl:if>
														<a rel="relatedproducts">
															<xsl:value-of select="aspdnsf:StringResource('product.tabUI.tab4')" disable-output-escaping="yes" />
														</a>
														<xsl:if test="aspdnsf:AppConfig('RecentlyViewedProducts.Enabled') = 'true'">
															<a rel="recentlyviewedproducts">
																<xsl:value-of select="aspdnsf:StringResource('product.tabUI.tab5')" disable-output-escaping="yes" />
															</a>
														</xsl:if>
													</div>
													<div id="tabcontent">
														<div id="overview">
															<table>
																<tr>
																	<td>
																		<xsl:choose>
																			<xsl:when test="$isMultiVariant = true()">
																				<xsl:call-template name="OverviewMultiVariant"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:call-template name="OverviewSingleVariant"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</td>
																</tr>
															</table>
														</div>

														<div id="images">
															<xsl:value-of select="aspdnsf:LookupProductImage(ProductID, ImageFilenameOverride, SKU, 'medium', 1, $AltText)" disable-output-escaping="yes"/>
														</div>

														<xsl:if test="aspdnsf:IsMLExpress() = 'false'">
															<div id="reviews">
																<xsl:value-of select="aspdnsf:ProductRatings(ProductID, 0, 0, 0, 1, 0)" disable-output-escaping="yes"/>
															</div>
														</xsl:if>

														<div id="relatedproducts">
															<xsl:value-of select="aspdnsf:RelatedProducts(ProductID, 0)" disable-output-escaping="yes"/>
														</div>


														<div id ="recentlyviewedproducts">
															<xsl:value-of select="aspdnsf:RecentlyViewed(ProductID, 0)" disable-output-escaping="yes"/>
														</div>

													</div>

													<script type="text/javascript" language="Javascript" >
														TabbedUI.prototype.initialize();
													</script>
												</div>
											</td>
										</tr>
									</table>
								</td>
							</tr>

						</table>

						<xsl:if test="$isMultiVariant = true()">
							<table border="0" width="100%" cellpadding="0" cellspacing="0">
								<tr>
									<td>
										<!-- list variants now -->
										<xsl:for-each select="/root/Products/Product">
											<xsl:call-template name="Variant"/>
										</xsl:for-each>

									</td>
								</tr>
							</table>
						</xsl:if>

						<table border="0" width="100%" cellpadding="0" cellspacing="0">
							<tr>
								<td>
									<tr>
										<td colspan="2">
											<xsl:value-of select="aspdnsf:ShowUpsellProducts(ProductID)" disable-output-escaping="yes"/>
										</td>
									</tr>
								</td>
							</tr>
						</table>

						<div style="width:100%; text-align: right; margin-bottom:-20px">
							<table  border="0" width="100%" cellpadding="0" cellspacing="0">
								<tr>
									<td>
										<xsl:value-of select="aspdnsf:ProductSpecs(ProductID, 1, SpecsInline, SpecCall, 400)" disable-output-escaping="yes"/>
									</td>
								</tr>
							</table>
						</div>
					</xsl:otherwise>
				</xsl:choose>

			</xsl:template>



			<xsl:template name="Variant">

				<xsl:param name="pName" select="aspdnsf:GetMLValue(Name)"/>
				<xsl:param name="vName" select="aspdnsf:GetMLValue(VariantName)"/>
				<xsl:param name="vDescription" select="aspdnsf:GetMLValue(VariantDescription)"/>
				<xsl:param name="pSalesPromptName" select="aspdnsf:GetMLValue(SalesPromptName)"/>

				<table style="width:100%">
					<tr>
						<td style="padding-left: 20px">
							<div>
								<b>
									<xsl:value-of select="$vName" disable-output-escaping="yes" />
								</b>
							</div>
							<div>
								<br />
							</div>

							<div>
								<xsl:value-of select="$vDescription" disable-output-escaping="yes"/>
							</div>
							<div>
								<br />
							</div>

							<table style="width:100%" border="0">
								<tr>
									<td>
										<table border="0" style="width:100%">
											<tr>
												<td align="left">
													<xsl:value-of select="aspdnsf:StringResource('showproduct.aspx.21')" disable-output-escaping="yes" />
												</td>
												<td align="left">
													<xsl:value-of select="SKU"/>
													<xsl:value-of select="SkuSuffix"/>
												</td>
											</tr>
											<xsl:choose>
												<xsl:when test="Dimensions!=''">
													<tr>
														<td align="left">
															<xsl:value-of select="aspdnsf:StringResource('showproduct.aspx.23')" disable-output-escaping="yes" />
														</td>
														<td align="left">
															<xsl:value-of select="Dimensions"/>
														</td>
													</tr>
												</xsl:when>
											</xsl:choose>
											<xsl:choose>
												<xsl:when test="Weight!=''">
													<tr>
														<td align="left">
															<xsl:value-of select="aspdnsf:StringResource('showproduct.aspx.24')" disable-output-escaping="yes" />
														</td>
														<td align="left">
															<xsl:value-of select="aspdnsf:FormatDecimal(Weight, 2)"/>
														</td>
													</tr>
												</xsl:when>
											</xsl:choose>
											<xsl:choose>
												<!-- 
													Showing of inventory table also goes through the rules of DisplayOutOfStock appconfig if enabled..
												-->
												<xsl:when test="aspdnsf:AppConfigBool('ShowInventoryTable')='true'">
													<tr>
														<td align="left" colspan="2" width="100%">
															<table border="0"  style="width: 110%">
																<tr>
																	<td>
																		<xsl:value-of select="aspdnsf:ShowInventoryTable(ProductID, VariantID)" disable-output-escaping="yes" />
																	</td>
																</tr>
															</table>
														</td>
													</tr>
												</xsl:when>
												<xsl:otherwise>
													<xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
														<tr>
															<td align="left" colspan="2" width="100%">
																<xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID, VariantID, 'Product')" disable-output-escaping="yes" />
															</td>
														</tr>
													</xsl:if>
												</xsl:otherwise>
											</xsl:choose>

											<tr>
												<td colspan="2">
													<xsl:if test="number(CustomerEntersPrice)=0">
														<span>
															<xsl:attribute name="id">
																VariantPrice_<xsl:value-of select="VariantID"/>
															</xsl:attribute>
															<xsl:value-of select="aspdnsf:GetVariantPrice(VariantID, number(HidePriceUntilCart), Price, SalePrice, ExtendedPrice, Points, $pSalesPromptName, TaxClassID)" disable-output-escaping="yes" />
														</span>
													</xsl:if>
												</td>
											</tr>
										</table>
									</td>
									<td style="width:70%" valign="bottom">
										<table border="0" style="width:100%; height: 100%">
											<tr>
												<td align="left" valign="bottom">
													<xsl:value-of select="aspdnsf:AddtoCartForm(ProductID, VariantID, 0)" disable-output-escaping="yes"/>
												</td>
											</tr>
										</table>
									</td>
								</tr>
							</table>

							<div>
								<br />
							</div>
							<div>
								<xsl:value-of select="aspdnsf:ShowQuantityDiscountTable(ProductID)" disable-output-escaping="yes"/>
								<br/>
							</div>
							<div>
								<br />
							</div>

							<xsl:choose>
								<xsl:when test="position()!=last()">
									<hr size="1" color="#CCCCCC" />
								</xsl:when>
							</xsl:choose>
						</td>
					</tr>
				</table>
			</xsl:template>

			<xsl:template name="OverviewMultiVariant">
				<xsl:param name="pName" select="aspdnsf:GetMLValue(Name)"/>
				<xsl:param name="pDescription" select="aspdnsf:GetMLValue(Description)"/>
				<xsl:param name="pSEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:param>
				<xsl:param name="AltText">
					<xsl:choose>
						<xsl:when test="$pSEAltText=''">
							<xsl:value-of select="$pName" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$pSEAltText" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:param>

				<xsl:choose>
					<xsl:when test="IsAKit=1">
						<div>
							<b>
								<font color="red">
									Display of Kit Products is not supported by this XmlPackage.<br /><br />XmlPackage=<xsl:value-of select="$XmlPackageName" />
								</font>
							</b>
						</div>
					</xsl:when>
					<xsl:when test="IsAPack=1">
						<div>
							<b>
								<font color="red">
									Display of Pack Products is not supported by this XmlPackage.<br /><br />XmlPackage=<xsl:value-of select="$XmlPackageName" />
								</font>
							</b>
						</div>
					</xsl:when>
					<xsl:otherwise>
						<table border="0" width="100%" cellpadding="4" cellspacing="0">
							<tr>
								<td align="left" valign="top">
									<xsl:variable name="imageHTML" select="aspdnsf:LookupProductImage(ProductID, ImageFilenameOverride, SKU, 'icon', 1)" />
									<xsl:variable name="expectedID" select="concat('ProductPic', ProductID)" />
									<xsl:variable name="idInstead" select="concat('ProductPic_', ProductID, '_icon')" />
									<xsl:variable name="htmlInstead" select="concat(substring-before($imageHTML, $expectedID), $idInstead, substring-after($imageHTML, $expectedID))"  />
									<xsl:variable name="finalImageHtml" select="concat(substring-before($htmlInstead, $expectedID), $idInstead, substring-after($htmlInstead, $expectedID))"  />

									<xsl:value-of select="$finalImageHtml" disable-output-escaping="yes" />
								</td>
								<td align="left" valign="top" width="100%">
									<div>
										<table width="100%" cellpadding="0" cellspacing="0">
											<tr>
												<td width="100%" align="left" valign="middle">
													<span class="ProductNameTextinTab">
														<xsl:value-of select="$pName" disable-output-escaping="yes" />
													</span>
													<xsl:value-of select="aspdnsf:EmailProductToFriend(ProductID, $CatID)" disable-output-escaping="yes" />
													<br/>
													<xsl:value-of select="aspdnsf:ProductSpecsLink(ProductID, SpecsInline, SpecTitle, SKU, SpecCall)" disable-output-escaping="yes" />
												</td>
											</tr>
										</table>
									</div>
									<div>
										<br />
									</div>
									<div>
										<xsl:value-of select="$pDescription" disable-output-escaping="yes" />
									</div>
									<div>
										<br />
									</div>
									<xsl:if test="aspdnsf:AppConfigBool('PayPal.Promo.Enabled')='true'">
										<xsl:if test="Price &lt;= aspdnsf:AppConfig('PayPal.Promo.CartMaximum') and Price &gt;= aspdnsf:AppConfig('PayPal.Promo.CartMinimum')">
											<div style="width:100%; text-align: left;">
												<a target="_blank">
													<xsl:attribute name="href">
														<xsl:value-of select="aspdnsf:AppConfig('PayPal.Promo.LearnMoreURL')"/>
													</xsl:attribute>
													<img>
														<xsl:attribute name="src">
															<xsl:value-of select="aspdnsf:AppConfig('PayPal.Promo.BannerURL')"/>
														</xsl:attribute>
													</img>
												</a>
											</div>
										</xsl:if>
									</xsl:if>
								</td>
							</tr>
						</table>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:template>

			<xsl:template name="OverviewSingleVariant">

				<xsl:param name="pName" select="aspdnsf:GetMLValue(Name)"/>
				<xsl:param name="pDescription" select="aspdnsf:GetMLValue(Description)"/>
				<xsl:param name="pSalesPromptName" select="aspdnsf:GetMLValue(SalesPromptName)"/>
				<xsl:choose>
					<xsl:when test="IsAKit=1">
						<div>
							<b>
								<font color="red">
									Display of Kit Products is not supported by this XmlPackage.<br /><br />XmlPackage=<xsl:value-of select="$XmlPackageName" />
								</font>
							</b>
						</div>
					</xsl:when>
					<xsl:when test="IsAPack=1">
						<div>
							<b>
								<font color="red">
									Display of Pack Products is not supported by this XmlPackage.<br /><br />XmlPackage=<xsl:value-of select="$XmlPackageName" />
								</font>
							</b>
						</div>
					</xsl:when>
					<xsl:otherwise>
						<table border="0" width="100%" cellpadding="4" cellspacing="0">
							<tr>
								<td align="left" valign="top">
									<xsl:variable name="imageHTML" select="aspdnsf:LookupProductImage(ProductID, ImageFilenameOverride, SKU, 'icon', 1)" />
									<xsl:variable name="expectedID" select="concat('ProductPic', ProductID)" />
									<xsl:variable name="idInstead" select="concat('ProductPic_', ProductID, '_icon')" />
									<xsl:variable name="htmlInstead" select="concat(substring-before($imageHTML, $expectedID), $idInstead, substring-after($imageHTML, $expectedID))"  />
									<xsl:variable name="finalImageHtml" select="concat(substring-before($htmlInstead, $expectedID), $idInstead, substring-after($htmlInstead, $expectedID))"  />

									<xsl:value-of select="$finalImageHtml" disable-output-escaping="yes" />
								</td>
								<td align="left" valign="top" width="100%">
									<div>
										<table width="100%" cellpadding="0" cellspacing="0">
											<tr>
												<td width="100%" align="left" valign="middle">
													<span class="ProductNameTextinTab">
														<xsl:value-of select="$pName" disable-output-escaping="yes" />
													</span>
													<xsl:value-of select="aspdnsf:EmailProductToFriend(ProductID, $CatID)" disable-output-escaping="yes" />
													<br/>
													<xsl:value-of select="aspdnsf:ProductSpecsLink(ProductID, SpecsInline, SpecTitle, SKU, SpecCall)" disable-output-escaping="yes" />
												</td>
											</tr>
										</table>
									</div>
									<div>
										<br />
									</div>
									<div>
										<xsl:value-of select="$pDescription" disable-output-escaping="yes"/>
									</div>
									<div>
										<br />
									</div>
									<table>
										<tr>
											<td align="left">
												<xsl:value-of select="aspdnsf:StringResource('showproduct.aspx.21')" disable-output-escaping="yes" />
											</td>
											<td align="left">
												<xsl:value-of select="SKU"/>
												<xsl:value-of select="SkuSuffix"/>
											</td>
										</tr>
										<xsl:choose>
											<xsl:when test="Dimensions!=''">
												<tr>
													<td align="left">
														<xsl:value-of select="aspdnsf:StringResource('showproduct.aspx.23')" disable-output-escaping="yes" />
													</td>
													<td align="left">
														<xsl:value-of select="Dimensions"/>
													</td>
												</tr>
											</xsl:when>
										</xsl:choose>
										<xsl:choose>
											<xsl:when test="Weight!=''">
												<tr>
													<td align="left">
														<xsl:value-of select="aspdnsf:StringResource('showproduct.aspx.24')" disable-output-escaping="yes" />
													</td>
													<td align="left">
														<xsl:value-of select="aspdnsf:FormatDecimal(Weight, 2)"/>
													</td>
												</tr>
											</xsl:when>
										</xsl:choose>

									</table>
									<table>
										<xsl:choose>
											<xsl:when test="aspdnsf:AppConfigBool('ShowInventoryTable')='true'">
												<tr>
													<td align="left" colspan="2" width="100%">
														<xsl:value-of select="aspdnsf:ShowInventoryTable(ProductID, VariantID)" disable-output-escaping="yes" />
													</td>
												</tr>
											</xsl:when>
											<xsl:otherwise>
												<xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
													<tr>
														<td align="left" colspan="2" width="100%">
															<xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID, VariantID, 'Product')" disable-output-escaping="yes" />
														</td>
													</tr>
												</xsl:if>
											</xsl:otherwise>
										</xsl:choose>
									</table>
									<table>
										<tr>
											<td colspan="2">
												<span>
													<xsl:if test="number(CustomerEntersPrice)=0">
														<xsl:attribute name="id">
															VariantPrice_<xsl:value-of select="VariantID"/>
														</xsl:attribute>
														<xsl:value-of select="aspdnsf:GetVariantPrice(VariantID, number(HidePriceUntilCart), Price, SalePrice, ExtendedPrice, Points, $pSalesPromptName, TaxClassID)" disable-output-escaping="yes" />
													</xsl:if>
												</span>
											</td>
										</tr>
									</table>
									<div>
										<br />
									</div>
									<xsl:if test="aspdnsf:AppConfigBool('PayPal.Promo.Enabled')='true'">
										<xsl:if test="Price &lt;= aspdnsf:AppConfig('PayPal.Promo.CartMaximum') and Price &gt;= aspdnsf:AppConfig('PayPal.Promo.CartMinimum')">
											<div style="width:100%; text-align: left;">
												<a target="_blank">
													<xsl:attribute name="href">
														<xsl:value-of select="aspdnsf:AppConfig('PayPal.Promo.LearnMoreURL')"/>
													</xsl:attribute>
													<img>
														<xsl:attribute name="src">
															<xsl:value-of select="aspdnsf:AppConfig('PayPal.Promo.BannerURL')"/>
														</xsl:attribute>
													</img>
												</a>
											</div>
										</xsl:if>
									</xsl:if>
									<div>
										<xsl:value-of select="aspdnsf:ShowQuantityDiscountTable(ProductID)" disable-output-escaping="yes"/>
										<br/>
										<xsl:value-of select="aspdnsf:AddtoCartForm(ProductID, VariantID, 1)" disable-output-escaping="yes"/>
									</div>
								</td>
							</tr>
						</table>
					</xsl:otherwise>
				</xsl:choose>

			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>
