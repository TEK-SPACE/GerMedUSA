<?xml version="1.0" standalone="yes" ?>
<package version="2.1" displayname="AlsoBought" debug="false" includeentityhelper="false">

	<!-- ###################################################################################################### -->
	<!-- Copyright AspDotNetStorefront.com, 1995-2009.  All Rights Reserved.					                -->
	<!-- http://www.aspdotnetstorefront.com														                -->
	<!-- For details on this license please visit  the product homepage at the URL above.		                -->
	<!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
	<!--                                                                                                        -->
	<!-- ###################################################################################################### -->


	<query name="AlsoBoughtItems" rowElementName="Item">
		<sql>
			<![CDATA[
			exec aspdnsf_GetCustomersAlsoBoughtProducts 
				 @NumProductToDisplay,
				 @productid,
				 @CustomerLevelID,
				 @InvFilter,
                 @affiliateID
            ]]>
		</sql>
		<queryparam paramname="@ProductID"				paramtype="runtime"   requestparamname="ProductID"                                  sqlDataType="int" defvalue="0"		validationpattern="" />
		<queryparam paramname="@CustomerLevelID"		paramtype="system"    requestparamname="CustomerLevelID"                            sqlDataType="int" defvalue="0"		validationpattern="" />
		<queryparam paramname="@InvFilter"				paramtype="appconfig" requestparamname="HideProductsWithLessThanThisInventoryLevel" sqlDataType="int" defvalue="0"		validationpattern="" />
		<queryparam paramname="@NumProductToDisplay"	paramtype="appconfig" requestparamname="AlsoBoughtNumberToDisplay"					sqlDataType="int" defvalue="0"		validationpattern="" />
		<queryparam paramname="@affiliateID"            paramtype="system"    requestparamname="AffiliateID"                                sqlDataType="int" defvalue="0"      validationpattern="" />
	</query>


	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes" />

			<xsl:param name="AlsoBoughtNumberToDisplay" select="aspdnsf:AppConfig('AlsoBoughtNumberToDisplay')"></xsl:param>
			<xsl:param name="AlsoBoughtProductsGridColWidth" select="aspdnsf:AppConfig('AlsoBoughtProductsGridColWidth')"></xsl:param>


			<xsl:template match="/">
				<xsl:if test="count(/root/AlsoBoughtItems/Item) &gt; 0">

					<table width="100%" cellpadding="2" cellspacing="0" border="0" style="border-style: solid; border-width: 0px; border-color: #{aspdnsf:AppConfig('HeaderBGColor')};" >
						<tr>
							<td align="left" valign="top">
								<img src="{aspdnsf:LocateImageURL(concat('skins/Skin_', /root/System/SkinID, '/images/alsobought.gif'))}" border="0"/>
								<br/>
								<table width="100%" cellpadding="4" cellspacing="0" border="0" style="{aspdnsf:AppConfig('BoxFrameStyle')}">
									<tr>
										<td align="left" valign="top" class="RelatedProductsBoxStyle">
											<xsl:choose>
												<xsl:when test="aspdnsf:StrToLower(aspdnsf:AppConfig('AlsoBoughtProductsFormat')) = 'grid'">
													<xsl:apply-templates select="/root/AlsoBoughtItems/Item" />
												</xsl:when>
												<xsl:otherwise>
													<table width="100%">
														<xsl:for-each select="/root/AlsoBoughtItems/Item">
															<xsl:variable name="AltText">
																<xsl:choose>
																	<xsl:when test="SEAltText=''">
																		<xsl:value-of select="Name" />
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="SEAltText" />
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<tr>
																<td width="100%">
																	<table width="100%">
																		<tr>
																			<td valign="center">
																				<xsl:value-of select="aspdnsf:LookupProductImage(ProductID, ImageFilenameOverride, SKU, 'icon', 1, $AltText)" disable-output-escaping="yes"/>
																			</td>
																			<td width="100%">
																				<table width="100%">
																					<tr>
																						<td>
																							<a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
																								<xsl:value-of select="aspdnsf:GetMLValue(Name)" disable-output-escaping="yes" />
																							</a>
																						</td>
																					</tr>
																					<tr>
																						<td>
																							<span class="a2">
																								<xsl:value-of select="aspdnsf:GetMLValue(Description)" disable-output-escaping="yes" />
																							</span>
																						</td>
																					</tr>
																					<tr>
																						<td>
																							<div class="a1" style="PADDING-BOTTOM: 10px; PADDING-TOP: 10px;">
																								<a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
																									<xsl:value-of select="aspdnsf:StringResource('common.cs.33')" disable-output-escaping="yes" />
																								</a>
																							</div>
																							<xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
																								<xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID,'Product')" disable-output-escaping="yes" />
																							</xsl:if>
																						</td>
																					</tr>
																				</table>
																			</td>
																		</tr>
																	</table>
																	<xsl:if test="position() != last()">
																		<hr size="1" class="LightCellText"/>
																	</xsl:if>
																</td>
															</tr>
														</xsl:for-each>
													</table>
												</xsl:otherwise>
											</xsl:choose>
										</td>
									</tr>
								</table>
							</td>
						</tr>
					</table>
				</xsl:if>
			</xsl:template>

			<xsl:template match="Item">
				<xsl:variable name="delta">
					<xsl:choose>
						<xsl:when test="(count(/root/AlsoBoughtItems/Item) mod number($AlsoBoughtProductsGridColWidth)) = 0">0</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="number($AlsoBoughtProductsGridColWidth)-(count(/root/AlsoBoughtItems/Item) mod number($AlsoBoughtProductsGridColWidth))"/>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="rows" select="ceiling(count(/root/AlsoBoughtItems/Item) div number($AlsoBoughtProductsGridColWidth))" />

				<xsl:if test="position() mod $AlsoBoughtProductsGridColWidth = 1">
					<tr>
						<xsl:for-each select=". | following-sibling::*[position() &lt; $AlsoBoughtProductsGridColWidth]">
							<xsl:call-template name="ProductCell"></xsl:call-template>
						</xsl:for-each>
						<xsl:if test="ceiling(position() div  number($AlsoBoughtProductsGridColWidth)) = $rows and $delta &gt; 0">
							<xsl:call-template name="FillerCells">
								<xsl:with-param name="cellCount" select="$delta" />
							</xsl:call-template>
						</xsl:if>
					</tr>
				</xsl:if>

			</xsl:template>

			<xsl:template name="ProductCell">
				<xsl:param  name="AltText">
					<xsl:choose>
						<xsl:when test="SEAltText=''">
							<xsl:value-of select="Name" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="SEAltText" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:param>
				<xsl:param name="pName" select="aspdnsf:GetMLValue(Name)"></xsl:param>
				<td align="center" valign="top">
					<xsl:value-of select="aspdnsf:LookupProductImage(ProductID, ImageFilenameOverride, SKU, 'icon', 1,$AltText)" disable-output-escaping="yes"/>
					<br/>
					<a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
						<xsl:value-of select="$pName" disable-output-escaping="yes"/>
					</a>
					<xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
						<xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID,'Product')" disable-output-escaping="yes" />
					</xsl:if>
				</td>
			</xsl:template>

			<xsl:template name="FillerCells">
				<xsl:param name="cellCount"/>
				<xsl:param name="CellWidth" select="100 div $AlsoBoughtProductsGridColWidth" />
				<td width="{$CellWidth}%">&#160;</td>
				<xsl:if test="$cellCount > 1">
					<xsl:call-template name="FillerCells">
						<xsl:with-param name="cellCount" select="$cellCount - 1"/>
					</xsl:call-template>
				</xsl:if>
			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>

