<?xml version="1.0" standalone="yes" ?>
<package version="2.1" displayname="Recently Viewed Products" debug="false" includeentityhelper="false">

  <!-- ###################################################################################################### -->
  <!-- Copyright AspDotNetStorefront.com, 1995-2009.  All Rights Reserved.					                -->
  <!-- http://www.aspdotnetstorefront.com														                -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!--                                                                                                        -->
  <!-- ###################################################################################################### -->


  <query name="RecentlyViewedProducts" rowElementName="Item">
    <sql>
      <![CDATA[
	        exec dbo.aspdnsf_GetRecentlyViewedProducts
			    @productID,
				  @customerGUID,
				  @invFilter,
				  @recentlyViewedProductsNumToDisplay		   
            ]]>
    </sql>
    <queryparam paramname="@productid"								paramtype="runtime"   requestparamname="productid"                                  sqlDataType="int"				 defvalue="0"  validationpattern="" />
    <queryparam paramname="@customerGUID"							paramtype="runtime"   requestparamname="custGuid"                                   sqlDataType="nvarchar"			 defvalue=""   validationpattern="" />
    <queryparam paramname="@invFilter"								paramtype="appconfig" requestparamname="HideProductsWithLessThanThisInventoryLevel" sqlDataType="int"				 defvalue="0"  validationpattern="" />
    <queryparam paramname="@recentlyViewedProductsNumToDisplay"		paramtype="appconfig" requestparamname="RecentlyViewedProducts.NumberDisplayed"     sqlDataType="int"                defvalue="0"  validationpattern="" />
  </query>


  <PackageTransform>
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                        xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
      <xsl:output method="html" omit-xml-declaration="yes" />
		
      <xsl:param name="RecentlyViewedProducts.NumberDisplayed" select="aspdnsf:AppConfig('RecentlyViewedProducts.NumberDisplayed')"></xsl:param>
      <xsl:param name="RecentlyViewedProductsGridColWidth" select="aspdnsf:AppConfig('RecentlyViewedProductsGridColWidth')"></xsl:param>


      <xsl:template match="/">
        <xsl:param name="encloseInTab" select="aspdnsf:EvalBool(/root/Runtime/EncloseInTab)" />
		
        <xsl:choose>
          <xsl:when test="count(/root/RecentlyViewedProducts/Item) &gt; 0">
            <table width="100%" cellpadding="2" cellspacing="0" border="0" style="border-style: solid; border-width: 0px; border-color: #{aspdnsf:AppConfig('HeaderBGColor')};" >
              <tr>
                <td align="left" valign="top">

                  <xsl:if test="$encloseInTab = true()">
                    <img src="{aspdnsf:LocateImageURL(concat('skins/Skin_', /root/System/SkinID, '/images/recentlyviewedproducts.gif'))}" border="0"/>
                    <br/>
                  </xsl:if>


                  <table width="100%" cellpadding="4" cellspacing="0" border="0">

                    <xsl:if test="$encloseInTab = true()">
                      <xsl:attribute name="style">
                        <xsl:value-of select="aspdnsf:AppConfig('BoxFrameStyle')"/>
                      </xsl:attribute>
                    </xsl:if>


                    <tr>
                      <td align="left" valign="top" class="RelatedProductsBoxStyle">
                        <p>                         
                          <b>
                            <xsl:value-of select="/root/Runtime/teaser" />
                          </b>
                        </p>
                        <xsl:choose>
                          <xsl:when test="aspdnsf:StrToLower(aspdnsf:AppConfig('RecentlyViewedProducts.ProductsFormat')) = 'grid'">
                            <xsl:apply-templates select="/root/RecentlyViewedProducts/Item" />
                          </xsl:when>
                          <xsl:otherwise>
                            <table width="100%">
                              <xsl:for-each select="/root/RecentlyViewedProducts/Item">
                                <xsl:variable name="pName" select="aspdnsf:GetMLValue(Name)"></xsl:variable>
                                <xsl:variable name="pSEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:variable>
                                <xsl:variable name="AltText">
                                    <xsl:choose>
                                        <xsl:when test="$pSEAltText=''"><xsl:value-of select="$pName" /></xsl:when>
                                        <xsl:otherwise><xsl:value-of select="$pSEAltText" /></xsl:otherwise>
                                    </xsl:choose>
                                </xsl:variable>
                                <tr>
                                  <td width="100%">
                                    <table width="100%">
                                      <tr>
                                        <td valign="center">
                                          <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                            <xsl:value-of select="aspdnsf:LookupProductImage(ProductID, ImageFilenameOverride, SKU, 'icon', 0, SEAltText)" disable-output-escaping="yes"/>
                                          </a>
                                        </td>
                                        <td width="100%">
                                          <table width="100%">
                                            <tr>
                                              <td>
                                                <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                  <xsl:value-of select="aspdnsf:GetMLValue(Name)" disable-output-escaping="yes" />
                                                </a>
                                              </td>
                                            </tr>
                                            <tr>
                                              <td>
                                                <span class="a2">
                                                  <xsl:value-of select="aspdnsf:GetMLValue(Description)" disable-output-escaping="yes" />
                                                </span>
                                              </td>
                                            </tr>
                                            <tr>
                                              <td>
                                                <div class="a1" style="PADDING-BOTTOM: 10px; PADDING-TOP: 10px;">
                                                  <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                    <xsl:value-of select="aspdnsf:StringResource('common.cs.33')" disable-output-escaping="yes" />
                                                  </a>
                                                </div>
                                                <xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
                                                  <xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID,'Product')" disable-output-escaping="yes" />
                                                </xsl:if>
                                              </td>
                                            </tr>
                                          </table>
                                        </td>
                                      </tr>
                                    </table>
                                    <xsl:if test="position() != last()">
                                      <hr size="1" class="LightCellText"/>
                                    </xsl:if>
                                  </td>
                                </tr>
                              </xsl:for-each>
                            </table>
                          </xsl:otherwise>
                        </xsl:choose>

                      </td>
                    </tr>
                  </table>
                </td>
              </tr>
            </table>
          </xsl:when>
			<xsl:otherwise>
				<xsl:if test="$encloseInTab != true()">
					<div style="height : 200px; padding-top: 20px; padding-left: 20px">						
						<xsl:value-of select="aspdnsf:StringResource('showproduct.aspx.42')" disable-output-escaping="yes" />
					</div>
				</xsl:if>				
			</xsl:otherwise>		
        </xsl:choose>
		  
      </xsl:template>

      <xsl:template match="Item">
        <xsl:variable name="delta">
          <xsl:choose>
            <xsl:when test="(count(/root/RecentlyViewedProducts/Item) mod number($RecentlyViewedProductsGridColWidth)) = 0">0</xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="number($RecentlyViewedProductsGridColWidth)-(count(/root/RecentlyViewedProducts/Item) mod number($RecentlyViewedProductsGridColWidth))"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="rows" select="ceiling(count(/root/RecentlyViewedProducts/Item) div number($RecentlyViewedProductsGridColWidth))" />

        <xsl:if test="$RecentlyViewedProductsGridColWidth = 1">
          <tr>
            <xsl:call-template name="ProductCell"></xsl:call-template>
            <xsl:if test="ceiling(position() div  number($RecentlyViewedProductsGridColWidth)) = $rows and $delta &gt; 0">
              <xsl:call-template name="FillerCells">
                <xsl:with-param name="cellCount" select="$delta" />
              </xsl:call-template>
            </xsl:if>
          </tr>
        </xsl:if>

        <xsl:if test="position() mod $RecentlyViewedProductsGridColWidth = 1 and $RecentlyViewedProductsGridColWidth &gt; 1">
          <tr>
            <xsl:for-each select=". | following-sibling::*[position() &lt; $RecentlyViewedProductsGridColWidth]">
              <xsl:call-template name="ProductCell"></xsl:call-template>
            </xsl:for-each>
            <xsl:if test="ceiling(position() div  number($RecentlyViewedProductsGridColWidth)) = $rows and $delta &gt; 0">
              <xsl:call-template name="FillerCells">
                <xsl:with-param name="cellCount" select="$delta" />
              </xsl:call-template>
            </xsl:if>
          </tr>
        </xsl:if>

      </xsl:template>

      <xsl:template name="ProductCell">

        <xsl:param name="pName" select="aspdnsf:GetMLValue(Name)"></xsl:param>

        <xsl:param name="AltText">
          <xsl:choose>
            <xsl:when test="aspdnsf:GetMLValue(SEAltText)=''">
              <xsl:value-of select="aspdnsf:GetMLValue(Name)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="aspdnsf:GetMLValue(SEAltText)" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:param>

        <td align="center" valign="top">
          <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
            <xsl:value-of select="aspdnsf:LookupProductImage(ProductID, ImageFilenameOverride, SKU, 'icon', 0, $AltText)" disable-output-escaping="yes"/>
          </a>
          <br/>
          <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
            <xsl:value-of select="$pName" disable-output-escaping="yes"/>
          </a>
          <xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
            <xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID,'Product')" disable-output-escaping="yes" />
          </xsl:if>
        </td>
      </xsl:template>


      <xsl:template name="FillerCells">
        <xsl:param name="cellCount"/>
        <xsl:param name="CellWidth" select="100 div $RecentlyViewedProductsGridColWidth" />
        <td width="{$CellWidth}%">&#160;</td>
        <xsl:if test="$cellCount > 1">
          <xsl:call-template name="FillerCells">
            <xsl:with-param name="cellCount" select="$cellCount - 1"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>


    </xsl:stylesheet>
  </PackageTransform>
</package>






